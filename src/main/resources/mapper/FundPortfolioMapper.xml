<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.PatronageSystem.mapper.FundPortfolioMapper">

    <resultMap id="BaseResultMap" type="com.PatronageSystem.entity.FundPortfolio">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="portfolio_name" property="portfolioName" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="portfolio_type" property="portfolioType" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
        <result column="user_name" property="userName" jdbcType="VARCHAR"/>
    </resultMap>

    <sql id="Base_Column_List">
        fp.id, fp.portfolio_name, fp.user_id, fp.portfolio_type, fp.description, 
        fp.status, fp.create_time, fp.update_time, u.username as user_name
    </sql>

    <sql id="Base_Join">
        FROM fund_portfolio fp
        LEFT JOIN user u ON fp.user_id = u.id
    </sql>

    <select id="findByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.user_id = #{userId}
        ORDER BY fp.create_time DESC
    </select>

    <select id="findById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.id = #{id}
    </select>

    <select id="findByPortfolioName" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.portfolio_name = #{portfolioName}
    </select>

    <select id="findByUserIdAndName" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.user_id = #{userId} AND fp.portfolio_name = #{portfolioName}
    </select>

    <select id="findByPortfolioType" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.portfolio_type = #{portfolioType}
        ORDER BY fp.create_time DESC
    </select>

    <select id="findByStatus" parameterType="java.lang.Integer" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.status = #{status}
        ORDER BY fp.create_time DESC
    </select>

    <select id="findByUserIdAndStatus" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.user_id = #{userId} AND fp.status = #{status}
        ORDER BY fp.create_time DESC
    </select>

    <select id="findByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE 1=1
        <if test="userId != null">
            AND fp.user_id = #{userId}
        </if>
        <if test="portfolioType != null and portfolioType != ''">
            AND fp.portfolio_type = #{portfolioType}
        </if>
        <if test="status != null">
            AND fp.status = #{status}
        </if>
        <if test="keyword != null and keyword != ''">
            AND (fp.portfolio_name LIKE CONCAT('%', #{keyword}, '%')
                 OR fp.description LIKE CONCAT('%', #{keyword}, '%'))
        </if>
        ORDER BY fp.create_time DESC
    </select>

    <select id="searchByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.portfolio_name LIKE CONCAT('%', #{keyword}, '%')
              OR fp.description LIKE CONCAT('%', #{keyword}, '%')
        ORDER BY fp.create_time DESC
    </select>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        ORDER BY fp.create_time DESC
    </select>

    <select id="selectByPage" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE 1=1
        <if test="userId != null">
            AND fp.user_id = #{userId}
        </if>
        <if test="portfolioType != null and portfolioType != ''">
            AND fp.portfolio_type = #{portfolioType}
        </if>
        <if test="status != null">
            AND fp.status = #{status}
        </if>
        ORDER BY fp.create_time DESC
        LIMIT #{offset}, #{limit}
    </select>

    <select id="countByUserId" parameterType="java.lang.Long" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM fund_portfolio
        WHERE user_id = #{userId}
    </select>

    <select id="countAll" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM fund_portfolio
    </select>

    <select id="countByCondition" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM fund_portfolio fp
        WHERE 1=1
        <if test="userId != null">
            AND fp.user_id = #{userId}
        </if>
        <if test="portfolioType != null and portfolioType != ''">
            AND fp.portfolio_type = #{portfolioType}
        </if>
        <if test="status != null">
            AND fp.status = #{status}
        </if>
    </select>

    <select id="selectPortfolioStats" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_count,
            COUNT(CASE WHEN status = 1 THEN 1 END) as active_count,
            COUNT(CASE WHEN status = 0 THEN 1 END) as inactive_count,
            COUNT(DISTINCT portfolio_type) as type_count
        FROM fund_portfolio
        <if test="userId != null">
            WHERE user_id = #{userId}
        </if>
    </select>

    <select id="selectPortfolioCountByType" parameterType="java.lang.Long" resultType="java.util.Map">
        SELECT 
            portfolio_type as type,
            COUNT(*) as count
        FROM fund_portfolio
        <if test="userId != null">
            WHERE user_id = #{userId}
        </if>
        GROUP BY portfolio_type
        ORDER BY count DESC
    </select>

    <insert id="insert" parameterType="com.PatronageSystem.entity.FundPortfolio" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO fund_portfolio (
            portfolio_name, user_id, portfolio_type, description, status, create_time, update_time
        ) VALUES (
            #{portfolioName}, #{userId}, #{portfolioType}, #{description}, #{status}, NOW(), NOW()
        )
    </insert>

    <update id="update" parameterType="com.PatronageSystem.entity.FundPortfolio">
        UPDATE fund_portfolio
        SET portfolio_name = #{portfolioName},
            portfolio_type = #{portfolioType},
            description = #{description},
            status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <update id="updateStatus">
        UPDATE fund_portfolio
        SET status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM fund_portfolio WHERE id = #{id}
    </delete>

    <delete id="batchDelete" parameterType="java.util.List">
        DELETE FROM fund_portfolio 
        WHERE id IN
        <foreach collection="ids" item="id" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <delete id="deleteByUserId" parameterType="java.lang.Long">
        DELETE FROM fund_portfolio WHERE user_id = #{userId}
    </delete>

    <select id="checkPortfolioNameExists" resultType="java.lang.Integer">
        SELECT COUNT(*)
        FROM fund_portfolio
        WHERE user_id = #{userId} AND portfolio_name = #{portfolioName}
    </select>

    <select id="selectRecentPortfolios" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        WHERE fp.user_id = #{userId}
        ORDER BY fp.create_time DESC
        LIMIT #{limit}
    </select>

    <select id="selectActivePortfolios" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT DISTINCT <include refid="Base_Column_List"/>
        <include refid="Base_Join"/>
        INNER JOIN fund_portfolio_detail fpd ON fp.id = fpd.portfolio_id
        WHERE fp.user_id = #{userId} AND fp.status = 1
        ORDER BY fp.create_time DESC
    </select>

</mapper> 