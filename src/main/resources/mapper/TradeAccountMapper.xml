<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.PatronageSystem.Patronage.mapper.TradeAccountMapper">

    <resultMap id="BaseResultMap" type="com.PatronageSystem.Patronage.entity.TradeAccount">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="account_code" property="accountCode" jdbcType="VARCHAR"/>
        <result column="account_name" property="accountName" jdbcType="VARCHAR"/>
        <result column="user_id" property="userId" jdbcType="BIGINT"/>
        <result column="account_type" property="accountType" jdbcType="VARCHAR"/>
        <result column="broker" property="broker" jdbcType="VARCHAR"/>
        <result column="account_status" property="accountStatus" jdbcType="VARCHAR"/>
        <result column="total_assets" property="totalAssets" jdbcType="DECIMAL"/>
        <result column="available_cash" property="availableCash" jdbcType="DECIMAL"/>
        <result column="frozen_cash" property="frozenCash" jdbcType="DECIMAL"/>
        <result column="market_value" property="marketValue" jdbcType="DECIMAL"/>
        <result column="unrealized_pnl" property="unrealizedPnl" jdbcType="DECIMAL"/>
        <result column="realized_pnl" property="realizedPnl" jdbcType="DECIMAL"/>
        <result column="total_pnl" property="totalPnl" jdbcType="DECIMAL"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, account_code, account_name, user_id, account_type, broker, account_status,
        total_assets, available_cash, frozen_cash, market_value, unrealized_pnl, realized_pnl, total_pnl,
        create_time, update_time
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        ORDER BY create_time DESC
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        WHERE id = #{id}
    </select>

    <select id="selectByAccountCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        WHERE account_code = #{accountCode}
    </select>

    <select id="selectByUserId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        WHERE user_id = #{userId}
        ORDER BY create_time DESC
    </select>

    <select id="selectByStatus" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        WHERE account_status = #{accountStatus}
        ORDER BY create_time DESC
    </select>

    <select id="searchAccounts" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM trade_account
        <where>
            <if test="accountStatus != null and accountStatus != ''">
                AND account_status = #{accountStatus}
            </if>
            <if test="accountType != null and accountType != ''">
                AND account_type = #{accountType}
            </if>
        </where>
        ORDER BY create_time DESC
    </select>

    <insert id="insert" parameterType="com.PatronageSystem.Patronage.entity.TradeAccount" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO trade_account (
            account_code, account_name, user_id, account_type, broker, account_status,
            total_assets, available_cash, frozen_cash, market_value, unrealized_pnl, realized_pnl, total_pnl
        ) VALUES (
            #{accountCode}, #{accountName}, #{userId}, #{accountType}, #{broker}, #{accountStatus},
            #{totalAssets}, #{availableCash}, #{frozenCash}, #{marketValue}, #{unrealizedPnl}, #{realizedPnl}, #{totalPnl}
        )
    </insert>

    <update id="update" parameterType="com.PatronageSystem.Patronage.entity.TradeAccount">
        UPDATE trade_account
        SET account_name = #{accountName},
            account_type = #{accountType},
            broker = #{broker},
            account_status = #{accountStatus},
            total_assets = #{totalAssets},
            available_cash = #{availableCash},
            frozen_cash = #{frozenCash},
            market_value = #{marketValue},
            unrealized_pnl = #{unrealizedPnl},
            realized_pnl = #{realizedPnl},
            total_pnl = #{totalPnl},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM trade_account WHERE id = #{id}
    </delete>

    <update id="updateAccountStatus">
        UPDATE trade_account
        SET account_status = #{accountStatus},
            update_time = NOW()
        WHERE id = #{id}
    </update>

</mapper>
