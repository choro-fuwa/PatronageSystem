<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.PatronageSystem.mapper.FactorPortfolioMapper">

    <resultMap id="BaseResultMap" type="com.PatronageSystem.entity.FactorPortfolio">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="portfolio_name" property="portfolioName" jdbcType="VARCHAR"/>
        <result column="portfolio_code" property="portfolioCode" jdbcType="VARCHAR"/>
        <result column="description" property="description" jdbcType="VARCHAR"/>
        <result column="strategy_type" property="strategyType" jdbcType="VARCHAR"/>
        <result column="creator_id" property="creatorId" jdbcType="BIGINT"/>
        <result column="is_public" property="isPublic" jdbcType="INTEGER"/>
        <result column="status" property="status" jdbcType="INTEGER"/>
        <result column="create_time" property="createTime" jdbcType="TIMESTAMP"/>
        <result column="update_time" property="updateTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, portfolio_name, portfolio_code, description, strategy_type, creator_id, is_public, status, create_time, update_time
    </sql>

    <select id="selectAll" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE status = 1
        ORDER BY create_time DESC
    </select>

    <select id="selectById" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE id = #{id}
    </select>

    <select id="selectByPortfolioCode" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE portfolio_code = #{portfolioCode}
    </select>

    <select id="selectByCreatorId" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE creator_id = #{creatorId} AND status = 1
        ORDER BY create_time DESC
    </select>

    <select id="selectByCondition" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE status = 1
        <if test="strategyType != null and strategyType != ''">
            AND strategy_type = #{strategyType}
        </if>
        <if test="isPublic != null">
            AND is_public = #{isPublic}
        </if>
        ORDER BY create_time DESC
    </select>

    <insert id="insert" parameterType="com.PatronageSystem.entity.FactorPortfolio" useGeneratedKeys="true" keyProperty="id">
        INSERT INTO factor_portfolio (
            portfolio_name, portfolio_code, description, strategy_type, creator_id, is_public, status, create_time, update_time
        ) VALUES (
            #{portfolioName}, #{portfolioCode}, #{description}, #{strategyType}, #{creatorId}, #{isPublic}, #{status}, NOW(), NOW()
        )
    </insert>

    <update id="update" parameterType="com.PatronageSystem.entity.FactorPortfolio">
        UPDATE factor_portfolio
        SET portfolio_name = #{portfolioName},
            portfolio_code = #{portfolioCode},
            description = #{description},
            strategy_type = #{strategyType},
            creator_id = #{creatorId},
            is_public = #{isPublic},
            status = #{status},
            update_time = NOW()
        WHERE id = #{id}
    </update>

    <delete id="deleteById" parameterType="java.lang.Long">
        DELETE FROM factor_portfolio WHERE id = #{id}
    </delete>

    <!-- 统计查询 -->
    <select id="selectPortfolioStats" resultType="java.util.Map">
        SELECT 
            COUNT(*) as total_count,
            COUNT(CASE WHEN status = 1 THEN 1 END) as active_count,
            COUNT(CASE WHEN is_public = 1 THEN 1 END) as public_count,
            COUNT(DISTINCT strategy_type) as strategy_type_count
        FROM factor_portfolio
    </select>

    <!-- 按策略类型统计 -->
    <select id="selectPortfolioCountByStrategyType" resultType="java.util.Map">
        SELECT 
            strategy_type as type,
            COUNT(*) as count
        FROM factor_portfolio
        WHERE status = 1
        GROUP BY strategy_type
        ORDER BY count DESC
    </select>

    <!-- 模糊搜索 -->
    <select id="selectByKeyword" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT <include refid="Base_Column_List"/>
        FROM factor_portfolio
        WHERE status = 1
        AND (
            portfolio_code LIKE CONCAT('%', #{keyword}, '%')
            OR portfolio_name LIKE CONCAT('%', #{keyword}, '%')
            OR description LIKE CONCAT('%', #{keyword}, '%')
        )
        ORDER BY create_time DESC
    </select>



</mapper> 