server:
  port: 8081
  servlet:
    context-path: /api/strategy

spring:
  application:
    name: patronage-strategy
  
  # 数据库配置
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    url: jdbc:mysql://localhost:3306/patronage_strategy?useUnicode=true&characterEncoding=utf8&useSSL=false&serverTimezone=Asia/Shanghai
    username: root
    password: 243417
    
  # Redis配置
  redis:
    host: localhost
    port: 6379
    password: 
    database: 0
    timeout: 10000ms
    lettuce:
      pool:
        max-active: 8
        max-wait: -1ms
        max-idle: 8
        min-idle: 0

# MyBatis-Plus配置
mybatis-plus:
  configuration:
    map-underscore-to-camel-case: true
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
  global-config:
    db-config:
      id-type: auto
      logic-delete-field: deleted
      logic-delete-value: 1
      logic-not-delete-value: 0
  mapper-locations: classpath*:/mapper/**/*.xml

# 日志配置
logging:
  level:
    com.patronage.strategy: debug
    org.springframework.web: debug
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n"

# 自定义配置
patronage:
  strategy:
    # Python脚本路径
    python-script-path: /path/to/python/scripts
    # 回测数据路径
    backtest-data-path: /path/to/backtest/data
    # 预警推送配置
    alert:
      email:
        enabled: true
        smtp-host: smtp.qq.com
        smtp-port: 587
        username: your-email@qq.com
        password: your-email-password
      sms:
        enabled: false
        api-url: 
        api-key: 
    # WebSocket配置
    websocket:
      enabled: true
      endpoint: /ws/strategy 