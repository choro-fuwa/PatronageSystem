<template>
  <div class="news-board">
    <div class="news-columns">
      <div class="news-column" v-for="(group, colIdx) in columns" :key="colIdx">
        <div v-for="(item, idx) in group" :key="idx" class="news-card">
          <div class="news-header">
            <el-tag
              v-if="item.title !== '实时热点推送'"
              :type="item.title === '水利' ? 'warning' : 'danger'"
              size="small"
              class="hot-tag"
            >热点</el-tag>
            <span class="news-title">{{ item.title }}</span>
          </div>
          <div class="news-content" :title="item.content">{{ item.content }}</div>
          <div class="news-time">{{ item.time }}</div>
        </div>
      </div>
    </div>
  </div>
</template>

<script setup>
import * as XLSX from 'xlsx'
import { ref, onMounted, computed } from 'vue'

// Excel时间数字转字符串（如0.9868...转23:41）
function excelTimeToStr(excelTime) {
  if (typeof excelTime === 'string') return excelTime
  if (typeof excelTime === 'number') {
    const totalSeconds = Math.round(24 * 60 * 60 * excelTime)
    const h = Math.floor(totalSeconds / 3600)
    const m = Math.floor((totalSeconds % 3600) / 60)
    return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}`
  }
  return ''
}

const newsList = ref([])

onMounted(async () => {
  const res = await fetch('/news.xlsx')
  const arrayBuffer = await res.arrayBuffer()
  const workbook = XLSX.read(arrayBuffer, { type: 'array' })
  const sheet = workbook.Sheets[workbook.SheetNames[0]]
  const rows = XLSX.utils.sheet_to_json(sheet, { header: 1 })
  const [header, ...data] = rows
  newsList.value = data
    .filter(row => row[1])
    .map(row => {
      const text = row[1] || ''
      let title = '实时热点推送'
      let content = text
      const match = text.match(/【(.*?)】/)
      if (match) {
        title = match[1]
        content = text.replace(/【.*?】/, '')
      }
      return {
        time: excelTimeToStr(row[0]),
        title,
        content: content.trim()
      }
    })
})

const columns = computed(() => {
  const col1 = [], col2 = []
  newsList.value.forEach((item, idx) => (idx % 2 === 0 ? col1 : col2).push(item))
  return [col1, col2]
})
</script>

<style scoped>
.news-board {
  padding: 24px 0;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 8px #f0f1f2;
  max-width: 900px;
  margin: 0 auto;
}
.news-columns {
  display: flex;
  gap: 32px;
}
.news-column {
  flex: 1;
  display: flex;
  flex-direction: column;
  gap: 18px;
}
.news-card {
  background: #f8f9fa;
  border-radius: 8px;
  padding: 14px 18px 10px 18px;
  box-shadow: 0 1px 3px #e5e6eb;
  min-height: 60px;
}
.news-header {
  display: flex;
  align-items: center;
  gap: 8px;
  font-weight: 600;
  font-size: 15px;
  margin-bottom: 4px;
}
.hot-tag {
  margin-right: 4px;
}
.news-title {
  color: #222;
}
.news-content {
  color: #666;
  font-size: 13px;
  margin-bottom: 4px;
  display: -webkit-box;
  -webkit-line-clamp: 2; /* 最多显示2行 */
  -webkit-box-orient: vertical;
  overflow: hidden;
  text-overflow: ellipsis;
  word-break: break-all;
  cursor: pointer;
  line-height: 1.6;
  height: 3.2em; /* 2行高度，line-height*2 */
}
.news-time {
  color: #aaa;
  font-size: 12px;
  text-align: right;
}
</style>